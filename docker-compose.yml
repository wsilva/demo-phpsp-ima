version: '2'

services:

    queue: 
        image: rabbitmq:3.6-management
        container_name: queue
        ports:
            - "15672:15672"
            - "5672:5672"
        environment:
            - "RABBITMQ_DEFAULT_USER=user"
            - "RABBITMQ_DEFAULT_PASS=pass"
        networks: 
            - demo

    cache: 
        image: redis:2.8.23
        container_name: cache
        ports:
            - "6379:6379"
        volumes:
            - cache-data:/data
        entrypoint: ["redis-server"]
        command: ["--appendonly", "yes"]
        networks: 
            - demo

    database:
        image: mysql:5.6
        container_name: database
        ports:
            - "3306:3306"
        volumes:
            - database-data:/var/lib/mysql
        environment:
            - "MYSQL_ROOT_PASSWORD=root"
            - "MYSQL_DATABASE=phpsp-ima"
            - "MYSQL_USER=user"
            - "MYSQL_PASSWORD=pass"
        networks: 
            - demo

    web:
        image: wfsilva/nginx-php7-completo
        build:
            context: ./
            dockerfile: web-Dockerfile
        volumes:
            - ./src/:/app
            - ./configs/supervisor.nginx.conf:/etc/supervisor/conf.d/nginx.conf
            - ./configs/supervisor.core.conf:/etc/supervisor/conf.d/core.conf
            - ./configs/supervisor.php-fpm.conf:/etc/supervisor/conf.d/php-fpm.conf
            - ./configs/nginx.web.conf:/etc/nginx/conf.d/web.conf
            - ./configs/nginx.conf:/etc/nginx/nginx.conf
            - ./configs/www.conf:/etc/php/7.0/fpm/pool.d/www.conf
            - ./configs/php.cli.ini:/etc/php/7.0/cli/php.ini
            - ./configs/php.fpm.ini:/etc/php/7.0/fpm/php.ini
        links:
            - database:database
            - cache:cache
            - queue:queue
        expose:
            - "80"
        command: ["/usr/bin/supervisord", "-n"]
        networks: 
            demo:
                aliases:
                    - backendweb
    consumer:
        image: wfsilva/python-pika
        build:
            context: ./
            dockerfile: python-pika-Dockerfile
        volumes:
            - .:/app
        working_dir: /app
        links:
            - queue:queue
        command: ["python", "-u", "consumer.py"]
        networks: 
            - demo

    lb:
        image: nginx
        container_name: lb
        volumes:
            - ./configs/lb.conf:/etc/nginx/nginx.conf
        networks: 
            - demo
        ports:
            - "80:80"

volumes:
    cache-data:
        driver: local
    database-data:
        driver: local

networks:
    demo:
